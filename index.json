{
  "index.html": {
    "href": "index.html",
    "title": "シミュレーション結果分析のためのAWS環境構築用AWS CDK",
    "keywords": "シミュレーション結果分析のためのAWS環境構築用AWS CDK UE4用人流シミュレーションプラグイン(※) のアウトプットログもしくは人流ログから分析作成行うためのAWS環境構築用のAWS CDKです。 TODO: 技術検証レポートのURL更新 (※) こちら の技術検証レポートをご確認ください。 構築リソースのイメージ"
  },
  "manual/devMan.html": {
    "href": "manual/devMan.html",
    "title": "環境構築手順書",
    "keywords": "環境構築手順書 1 本書について 本書では、シミュレーション結果分析のためのAWS環境構築用AWS CDKを用いた環境構築手順について記載しています。 2 前提条件 AWSアカウントを未所持の場合、 アカウント作成ページ を参考にAWSアカウントの発行を実施してください。 Standard版のQuickSightアカウントを未所持の場合、 公式ユーザーガイド を参考にサブスクライブを実施してください。 AWS CLIがインストールされていない場合、 公式ユーザーガイド を参考にAWS CLIのインストールおよびプロファイルの設定を実施してください。 Node.jsがインストールされていない場合、 公式ページ を参考にNode.jsの バージョン22以上 のインストールおよび設定を実施してください。 3 実行準備 前提条件の実施により実行環境が整いましたら、 こちら からソースファイルをgit cloneします。 a. githubページの以下ボタンをクリックし、clone用のURLをクリップボードにコピーします。 b. Macの場合ターミナル、Windowsの場合コマンドプロンプトにて以下のコマンドを実行します。 git clone <クリップボードにコピーしたURL> git clone完了後、以下コマンドでcdkappディレクトリに移動し、必要なライブラリのインストールを行います。 # ディレクトリの移動 cd People-Flow-Simulation-Analysis-AWS-CDK # ライブラリのインストール。自動的にnode_modulesディレクトリを生成、各種ライブラリが追加されます。 npm ci また、以下の環境変数を設定します。 # 環境変数の設定 export PLATEAU_ENV=dev #こちらにはdevもしくはprodを指定 4 実行手順 AWS Cloud Development Kit (CDK)を使用する際に必要な初期設定を行うため以下のコマンドを実行します。 本コマンドについては、対象のAWSアカウントおよびリージョンごとに一度だけの実施で問題ございません。 npx cdk bootstrap 以下のコマンドでCDKを実行して分析環境をデプロイします。 # デプロイはAWSのdefaultプロファイルに基づき実行されます npm run deploy デプロイの状況については、AWS CloudFormationから確認が可能です。 以下のスタックのステータスが全て CREATE_COMPLETE となっておりましたら完了となります。 PFSQuickSightStack-<PLATEAU_ENV環境変数で指定した文字列> PFSGlueWorkflowStack-<PLATEAU_ENV環境変数で指定した文字列> PFSGlueJobStack-<PLATEAU_ENV環境変数で指定した文字列> PFSGlueDbStack-<PLATEAU_ENV環境変数で指定した文字列> PFSAthenaStack-<PLATEAU_ENV環境変数で指定した文字列> PFSS3Stack-<PLATEAU_ENV環境変数で指定した文字列> 画面イメージ"
  },
  "manual/userMan.html": {
    "href": "manual/userMan.html",
    "title": "分析の実行",
    "keywords": "分析の実行 1 本書について 本書では、人流シミュレーション結果分析のためのAWS環境構築用AWS CDKを用いて構築したAWS上の分析環境で、分析結果を確認する方法を説明します。 2 使い方 2-1 概要 別途提供の UE4用人流シミュレーションプラグイン を用いて人流シミュレーションを実行した結果の出力ログもしくは人流ログをご用意頂き、環境構築手順 にて事前にデプロイ頂いたS3バケットに配置することで、Glueによるログ加工及びQuickSightでのデータ分析を可能とします（手順は2-2項を参照）。 2-2 サンプル分析の作成手順 AWSマネジメントコンソールよりs3にアクセスし、以下のバケットを検索します。 PLATEAU_DEV=devの場合 pfss3stack-dev-analyzecsvlogbucket~ 1で検索したバケットの配下に、 AWSユーザーガイド を参考に以下バケットを作成します。 character-end-log/dt=sample-data character-info-log/dt=sample-data character-start-log/dt=sample-data goal-density-info/dt=sample-data 以下は character-start-log/dt=sample-data を作成した場合のイメージです。 本プロジェクト mainブランチ の以下ディレクトリに格納されている各種サンプルログを、 AWSユーザーガイド を参考に対応するバケットにアップロードします。 Contents/sampleLogs マネジメントコンソールにてAWS Glueにアクセスし、左ペインから Workflows(orchestration) を選択します。 環境構築手順書にてデプロイしたワークフローを選択し、Edit を押下します。 Properties - optional のアコーディオンメニューを開き、以下のように設定を行います（Valueの項目は手順3で設定したバケット名のdt=以降）。 Key: Target Value: sample-data Update workflow を押下します。 ワークフローの画面に戻るため、Run workflow を押下します。 ワークフローの状況については以下の Last run status から確認が可能です。 こちらが Completed となっておりましたらワークフローの完了となります。 8の完了後以下のようにQuickSightの画面にてデータセットが追加されており、そちらから任意の分析を作成できます。 QuickSightでの分析の作成については 公式のユーザーガイド をご確認ください。"
  }
}